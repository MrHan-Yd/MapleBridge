spring:
  application:
    name: MapleBridgeServer

  # 上传文件配置
  upload:
    file_path: E:/Project/MapleBridge/backend/src/main/resources/static
    file_visit_path: /upload/
    file_host: http://localhost:9999
  #静态资源访问
  # security安全框架配置
  security:
    # Security 过滤器优先级默认-100，此处可以不用设置，是为了方便学习
    filter:
      order: -100
    jwt:
      # Token KEY
      token_key: WGjFZaFYUh1yQKZVwgSZA5Zr1nhBWi37
      # 刷新Token KEY
      refresh_token: mWJnDDQW5hWCMcn0vaENxeTdv2A4Ybm8
      # 分
      expire: 5
      # 天
      refresh_expire: 7

  #数据源
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3307/maple_bridge_db?characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: root
    password: root

  #邮件服务
  mail:
    host: smtp.163.com
    username: weiguang_mr_han@163.com
    password: XOWCJBJXGVLZHQYV

  #RabbitMQ消息队列
  rabbitmq:
    #    addresses: localhost:5672
    username: admin  # RabbitMQ 服务器的用户名
    password: admin  # RabbitMQ 服务器的密码
    virtual-host: /maple_bridge  # 虚拟主机，用于隔离不同应用的消息队列
    host: 127.0.0.1  # RabbitMQ 服务器的主机地址
    port: 5672  # RabbitMQ 服务器的端口

    #listener:
    #  simple:
    #    default-requeue-rejected: false  # 当消息处理失败时，是否重新将消息放入队列
    #    retry:
    #      enabled: true  # 是否启用消息重试
    #      max-attempts: 3  # 最大重试次数
    #      initial-interval: 5000  # 初始重试间隔（毫秒）
    #      multiplier: 1.0  # 重试间隔的乘数因子
    #      max-interval: 10000  # 最大重试间隔（毫秒）

  #Kafka消息队列
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  #elasicSearch
  elasticsearch:
    # 地址
    uris: https://127.0.0.1:9200
    # 用户名
    username: elastic
    # 密码
    password: 7ImyfkwV_ZBmXPgE-67c
    # 证书密码：elastic
    # 超时时间
    socket-timeout: 10s

  data:
    # redis 配置
    redis:
      host: 127.0.0.1
      password: wgRedis010517
      port: 6379

    # MongoDB 配置
    mongodb:
      host: localhost
      port: 27017
      database: myDataBase
      authentication-database: admin
      username: mongo
      password: mongo
  # 静态资源文件
  web:
    resources:
      static-locations: classpath:/static/

  # 设置文件上传大小
  servlet:
    multipart:
      # 单文件最大支持
      max-file-size: 1MB
      # 整个请求最大支持，前端多文件上传最多允许上传8张图片，这个配置够用
      max-request-size: 10MB

# 服务器配置
server:
  port: 9999
  servlet:
    context-path: /

# 持久层框架配置
mybatis-plus:
  #SQL映射文件位置
  mapper-locations: classpath*:/mapper/*Mapper.xml,classpath*:/mapper/*Mapper/*Mapper.xml
  #别名
  type-aliases-package: priv.backend.domain
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

